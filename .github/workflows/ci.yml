name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Copy environment file for testing
      run: |
        cp .env.example .env

    - name: Build Docker images
      run: |
        docker compose -f compose.dev.yaml -f compose.ci.yaml build --parallel

    - name: Start Docker services
      run: |
        docker compose -f compose.dev.yaml -f compose.ci.yaml up -d postgres redis
        # Wait for services to be ready
        echo "Waiting for PostgreSQL to be ready..."
        timeout 60 bash -c 'until docker compose -f compose.dev.yaml -f compose.ci.yaml exec -T postgres pg_isready -U laravel; do sleep 2; done'
        echo "Waiting for Redis to be ready..."
        timeout 60 bash -c 'until docker compose -f compose.dev.yaml -f compose.ci.yaml exec -T redis redis-cli ping; do sleep 2; done'

    - name: Start workspace container
      run: |
        docker compose -f compose.dev.yaml -f compose.ci.yaml up -d workspace
        # Wait for workspace to be ready
        timeout 60 bash -c 'until docker compose -f compose.dev.yaml -f compose.ci.yaml exec -T workspace php --version; do sleep 2; done'

    - name: Fix container permissions
      run: |
        docker compose -f compose.dev.yaml -f compose.ci.yaml exec -T workspace git config --global --add safe.directory /var/www/html
        docker compose -f compose.dev.yaml -f compose.ci.yaml exec -T workspace sudo chown -R sail:sail /var/www/html

    - name: Install Composer dependencies
      run: |
        docker compose -f compose.dev.yaml -f compose.ci.yaml exec -T workspace composer install --prefer-dist --no-progress --optimize-autoloader

    - name: Generate application key
      run: |
        docker compose -f compose.dev.yaml -f compose.ci.yaml exec -T workspace php artisan key:generate

    - name: Install NPM dependencies and build assets
      run: |
        docker compose -f compose.dev.yaml -f compose.ci.yaml exec -T workspace npm ci
        docker compose -f compose.dev.yaml -f compose.ci.yaml exec -T workspace npm run build

    - name: Run database migrations
      run: |
        docker compose -f compose.dev.yaml -f compose.ci.yaml exec -T workspace php artisan migrate --force

    - name: Setup Laravel Passport
      run: |
        docker compose -f compose.dev.yaml -f compose.ci.yaml exec -T workspace ./scripts/setup-passport.sh

    - name: Run PHPStan
      run: |
        docker compose -f compose.dev.yaml -f compose.ci.yaml exec -T workspace ./vendor/bin/phpstan analyse --memory-limit=1G --no-progress

    - name: Run Laravel Pint
      run: |
        docker compose -f compose.dev.yaml -f compose.ci.yaml exec -T workspace ./vendor/bin/pint --test

    - name: Run tests with coverage
      run: |
        docker compose -f compose.dev.yaml -f compose.ci.yaml exec -T workspace php artisan test --coverage --min=3

    - name: Security audit
      run: |
        docker compose -f compose.dev.yaml -f compose.ci.yaml exec -T workspace composer audit

    - name: Cleanup Docker containers
      if: always()
      run: |
        docker compose -f compose.dev.yaml -f compose.ci.yaml down -v

  build-docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build development image
      run: |
        docker build -f docker/common/php-fpm.Dockerfile --target development -t laravel-app:dev .

    - name: Build production image
      run: |
        docker build -f docker/common/php-fpm.Dockerfile --target production -t laravel-app:prod .

    - name: Test Docker containers
      run: |
        docker compose -f compose.dev.yaml config
        docker compose -f compose.prod.yaml config
