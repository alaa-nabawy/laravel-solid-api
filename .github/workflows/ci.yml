name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_PASSWORD: secret  # pragma: allowlist secret
          POSTGRES_USER: laravel
          POSTGRES_DB: laravel_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: pdo, pdo_pgsql, mbstring, exif, pcntl, bcmath, gd, intl, opcache, redis
        coverage: xdebug

    - name: Copy environment file
      run: cp .env.example .env

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Generate application key
      run: php artisan key:generate

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install NPM dependencies
      run: npm ci

    - name: Build assets
      run: npm run build

    - name: Run database migrations
      run: php artisan migrate --force
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: laravel_test
        DB_USERNAME: laravel
        DB_PASSWORD: secret  # pragma: allowlist secret

    - name: Setup Laravel Passport
      run: ./scripts/setup-passport.sh

    - name: Run PHPStan
      run: ./vendor/bin/phpstan analyse --memory-limit=1G --no-progress

    - name: Run Laravel Pint
      run: ./vendor/bin/pint --test

    - name: Run tests with coverage
      run: php artisan test --coverage --min=70
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: laravel_test
        DB_USERNAME: laravel
        DB_PASSWORD: secret  # pragma: allowlist secret
        REDIS_HOST: localhost
        REDIS_PORT: 6379

    - name: Security audit
      run: composer audit

  build-docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build development image
      run: |
        docker build -f docker/common/php-fpm.Dockerfile --target development -t laravel-app:dev .

    - name: Build production image
      run: |
        docker build -f docker/common/php-fpm.Dockerfile --target production -t laravel-app:prod .

    - name: Test Docker containers
      run: |
        docker-compose -f compose.dev.yaml config
        docker-compose -f compose.prod.yaml config
